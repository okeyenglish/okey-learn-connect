import { useState } from "react";
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { ArrowLeft, Search, Plus, Edit2, MoreHorizontal, X } from "lucide-react";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";

interface QuickResponse {
  id: string;
  text: string;
  categoryId: string;
}

interface Category {
  id: string;
  name: string;
  responses: QuickResponse[];
}

interface QuickResponsesModalProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  onSelectResponse: (text: string) => void;
}

const defaultCategories: Category[] = [
  {
    id: "1",
    name: "–§–∏—Ä–º–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã",
    responses: [
      {
        id: "1-1",
        categoryId: "1",
        text: "Speaking club - —ç—Ç–æ –∑–∞–Ω—è—Ç–∏–µ –¥–ª—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –≤ —É—Å—Ç–Ω–æ–π —Ä–µ—á–∏, –≥–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–æ–≥—É—Ç —Å–≤–æ–±–æ–¥–Ω–æ –æ–±—â–∞—Ç—å—Å—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ –≤ –Ω–µ–ø—Ä–∏–Ω—É–∂–¥–µ–Ω–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ."
      },
      {
        id: "1-2",
        categoryId: "1",
        text: "*Workshop - —ç—Ç–æ –∏–º–∏—Ç–∞—Ü–∏—è —Å–∏—Ç—É–∞—Ü–∏–π,* –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –≤ –ø–æ–µ–∑–¥–∫–∞—Ö –∑–∞–≥—Ä–∞–Ω–∏—Ü–µ–π. –ó–∞ –≥–æ–¥ –º—ã –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –±–æ–ª–µ–µ 50 —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π."
      },
      {
        id: "1-3",
        categoryId: "1",
        text: "*Watch&Play - —ç—Ç–æ –∞–≤—Ç–æ—Ä—Å–∫–∏–π –∫—É—Ä—Å –Ω–∞—à–µ–π —à–∫–æ–ª—ã,* –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–µ—Ç—è–º –ø–æ–≥—Ä—É–∂–∞—Ç—å—Å—è –≤ –º–∏—Ä –º—É–ª—å—Ç—Ñ–∏–ª—å–º–æ–≤, –∏–∑—É—á–∞—è –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫."
      },
      {
        id: "1-4",
        categoryId: "1",
        text: "*–°—É–±–±–æ—Ç–Ω–∏–π –º–∏–Ω–∏-—Å–∞–¥–∏–∫ O'KEY ENGLISH*..."
      }
    ]
  },
  {
    id: "2",
    name: "–°—Ç–æ–∏–º–æ—Å—Ç—å",
    responses: [
      {
        id: "2-1",
        categoryId: "2",
        text: "–°—Ç–æ–∏–º–æ—Å—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 2500 —Ä—É–±–ª–µ–π –∑–∞ —É—Ä–æ–∫ 60 –º–∏–Ω—É—Ç."
      },
      {
        id: "2-2",
        categoryId: "2",
        text: "–ì—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è (2-4 —á–µ–ª–æ–≤–µ–∫–∞) - 1800 —Ä—É–±–ª–µ–π –∑–∞ —É—Ä–æ–∫ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞."
      },
      {
        id: "2-3",
        categoryId: "2",
        text: "–ú–∏–Ω–∏-–≥—Ä—É–ø–ø—ã (5-8 —á–µ–ª–æ–≤–µ–∫) - 1200 —Ä—É–±–ª–µ–π –∑–∞ —É—Ä–æ–∫ –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞."
      }
    ]
  },
  {
    id: "3",
    name: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ª–∏—Ü–∞",
    responses: [
      {
        id: "3-1",
        categoryId: "3",
        text: "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–∞—à–µ –∏–º—è, –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –≤–æ–∑—Ä–∞—Å—Ç —É—á–µ–Ω–∏–∫–∞."
      },
      {
        id: "3-2",
        categoryId: "3",
        text: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –Ω–∞—à —Å–∞–π—Ç –∏–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É. –ü—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!"
      }
    ]
  },
  {
    id: "4",
    name: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
    responses: [
      {
        id: "4-1",
        categoryId: "4",
        text: "–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –æ–±—É—á–µ–Ω–∏—è –º—ã –ø—Ä–æ–≤–æ–¥–∏–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –∑–Ω–∞–Ω–∏–π."
      },
      {
        id: "4-2",
        categoryId: "4",
        text: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–Ω–∏–º–∞–µ—Ç –æ–∫–æ–ª–æ 30 –º–∏–Ω—É—Ç –∏ –≤–∫–ª—é—á–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏, –ª–µ–∫—Å–∏–∫–∏ –∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤."
      }
    ]
  },
  {
    id: "5",
    name: "–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–π –∫–∞–ø–∏—Ç–∞–ª",
    responses: [
      {
        id: "5-1",
        categoryId: "5",
        text: "–î–∞, –º—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º –æ–ø–ª–∞—Ç—É –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–º –∫–∞–ø–∏—Ç–∞–ª–æ–º –¥–ª—è –¥–µ—Ç–µ–π –æ—Ç 3 –ª–µ—Ç."
      },
      {
        id: "5-2",
        categoryId: "5",
        text: "–î–ª—è –æ–ø–ª–∞—Ç—ã –º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–º –∫–∞–ø–∏—Ç–∞–ª–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –∏–∑ –ü–§–† –∏ –∑–∞–∫–ª—é—á–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä."
      }
    ]
  },
  {
    id: "6",
    name: "–£—á–µ–±–Ω–∏–∫–∏",
    responses: [
      {
        id: "6-1",
        categoryId: "6",
        text: "–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±—Ä–∏—Ç–∞–Ω—Å–∫–∏–µ —É—á–µ–±–Ω–∏–∫–∏ Cambridge –∏ Oxford."
      },
      {
        id: "6-2",
        categoryId: "6",
        text: "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è —à–∫–æ–ª–æ–π. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å –Ω–∏—á–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ."
      }
    ]
  }
];

export const QuickResponsesModal = ({ open, onOpenChange, onSelectResponse }: QuickResponsesModalProps) => {
  const [categories, setCategories] = useState<Category[]>(defaultCategories);
  const [selectedCategoryId, setSelectedCategoryId] = useState<string | null>(null);
  const [searchQuery, setSearchQuery] = useState("");
  const [showAddCategory, setShowAddCategory] = useState(false);
  const [showAddResponse, setShowAddResponse] = useState(false);
  const [newCategoryName, setNewCategoryName] = useState("");
  const [newResponseText, setNewResponseText] = useState("");

  const selectedCategory = categories.find(cat => cat.id === selectedCategoryId);
  
  const filteredCategories = categories.filter(category =>
    category.name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  const handleSelectResponse = (response: QuickResponse) => {
    onSelectResponse(response.text);
    onOpenChange(false);
  };

  const handleAddCategory = () => {
    if (!newCategoryName.trim()) return;
    
    const newCategory: Category = {
      id: Date.now().toString(),
      name: newCategoryName.trim(),
      responses: []
    };
    
    setCategories(prev => [...prev, newCategory]);
    setNewCategoryName("");
    setShowAddCategory(false);
  };

  const handleAddResponse = () => {
    if (!newResponseText.trim() || !selectedCategoryId) return;
    
    const newResponse: QuickResponse = {
      id: Date.now().toString(),
      categoryId: selectedCategoryId,
      text: newResponseText.trim()
    };
    
    setCategories(prev => prev.map(cat => 
      cat.id === selectedCategoryId 
        ? { ...cat, responses: [...cat.responses, newResponse] }
        : cat
    ));
    
    setNewResponseText("");
    setShowAddResponse(false);
  };

  const handleDeleteCategory = (categoryId: string) => {
    setCategories(prev => prev.filter(cat => cat.id !== categoryId));
  };

  const handleDeleteResponse = (responseId: string) => {
    setCategories(prev => prev.map(cat => ({
      ...cat,
      responses: cat.responses.filter(resp => resp.id !== responseId)
    })));
  };

  const goBack = () => {
    setSelectedCategoryId(null);
    setShowAddResponse(false);
  };

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-2xl max-h-[80vh] overflow-hidden flex flex-col">
        <DialogHeader className="flex-shrink-0">
          <div className="flex items-center gap-2">
            {selectedCategory && (
              <Button variant="ghost" size="sm" onClick={goBack}>
                <ArrowLeft className="h-4 w-4" />
              </Button>
            )}
            <DialogTitle>
              {selectedCategory ? selectedCategory.name : "–ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã"}
            </DialogTitle>
          </div>
        </DialogHeader>

        <div className="flex-1 overflow-hidden flex flex-col">
          {!selectedCategory ? (
            // Categories view
            <>
              <div className="flex-shrink-0 space-y-3 mb-4">
                <div className="flex items-center gap-2">
                  <div className="relative flex-1">
                    <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
                    <Input
                      placeholder="–†–∞–∑–¥–µ–ª—ã"
                      value={searchQuery}
                      onChange={(e) => setSearchQuery(e.target.value)}
                      className="pl-10"
                    />
                  </div>
                </div>
              </div>

              <div className="flex-1 overflow-y-auto space-y-2">
                {filteredCategories.map((category) => (
                  <div
                    key={category.id}
                    className="flex items-center justify-between p-3 border rounded-lg hover:bg-muted/50 cursor-pointer group"
                    onClick={() => setSelectedCategoryId(category.id)}
                  >
                    <div className="flex items-center gap-3">
                      <div className="w-8 h-8 bg-muted rounded flex items-center justify-center">
                        üìÅ
                      </div>
                      <span className="font-medium">{category.name}</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <DropdownMenu>
                        <DropdownMenuTrigger asChild>
                          <Button
                            variant="ghost"
                            size="sm"
                            className="opacity-0 group-hover:opacity-100 transition-opacity"
                            onClick={(e) => e.stopPropagation()}
                          >
                            <MoreHorizontal className="h-4 w-4" />
                          </Button>
                        </DropdownMenuTrigger>
                        <DropdownMenuContent>
                          <DropdownMenuItem onClick={() => handleDeleteCategory(category.id)}>
                            –£–¥–∞–ª–∏—Ç—å —Ä–∞–∑–¥–µ–ª
                          </DropdownMenuItem>
                        </DropdownMenuContent>
                      </DropdownMenu>
                    </div>
                  </div>
                ))}
                
                {showAddCategory ? (
                  <div className="p-3 border rounded-lg space-y-2">
                    <Input
                      placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞"
                      value={newCategoryName}
                      onChange={(e) => setNewCategoryName(e.target.value)}
                      onKeyPress={(e) => e.key === 'Enter' && handleAddCategory()}
                    />
                    <div className="flex gap-2">
                      <Button size="sm" onClick={handleAddCategory}>
                        –î–æ–±–∞–≤–∏—Ç—å
                      </Button>
                      <Button size="sm" variant="outline" onClick={() => setShowAddCategory(false)}>
                        –û—Ç–º–µ–Ω–∞
                      </Button>
                    </div>
                  </div>
                ) : (
                  <Button
                    variant="ghost"
                    className="w-full justify-start p-3 border-2 border-dashed text-primary"
                    onClick={() => setShowAddCategory(true)}
                  >
                    <Plus className="h-4 w-4 mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
                  </Button>
                )}
              </div>
            </>
          ) : (
            // Responses view
            <div className="flex-1 overflow-hidden flex flex-col">
              <div className="flex-shrink-0 mb-4">
                <p className="text-sm text-muted-foreground">–°–æ–æ–±—â–µ–Ω–∏—è</p>
              </div>

              <div className="flex-1 overflow-y-auto space-y-2">
                {selectedCategory.responses.map((response) => (
                  <div
                    key={response.id}
                    className="p-3 border rounded-lg hover:bg-muted/50 cursor-pointer group"
                    onClick={() => handleSelectResponse(response)}
                  >
                    <div className="flex items-start justify-between gap-2">
                      <p className="text-sm flex-1">{response.text}</p>
                      <div className="flex items-center gap-1">
                        <Button
                          variant="ghost"
                          size="sm"
                          className="opacity-0 group-hover:opacity-100 transition-opacity h-6 w-6 p-0"
                          onClick={(e) => {
                            e.stopPropagation();
                            // TODO: Edit functionality
                          }}
                        >
                          <Edit2 className="h-3 w-3" />
                        </Button>
                        <DropdownMenu>
                          <DropdownMenuTrigger asChild>
                            <Button
                              variant="ghost"
                              size="sm"
                              className="opacity-0 group-hover:opacity-100 transition-opacity h-6 w-6 p-0"
                              onClick={(e) => e.stopPropagation()}
                            >
                              <MoreHorizontal className="h-3 w-3" />
                            </Button>
                          </DropdownMenuTrigger>
                          <DropdownMenuContent>
                            <DropdownMenuItem onClick={() => handleDeleteResponse(response.id)}>
                              –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                            </DropdownMenuItem>
                          </DropdownMenuContent>
                        </DropdownMenu>
                      </div>
                    </div>
                  </div>
                ))}

                {showAddResponse ? (
                  <div className="p-3 border rounded-lg space-y-2">
                    <Textarea
                      placeholder="–¢–µ–∫—Å—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞"
                      value={newResponseText}
                      onChange={(e) => setNewResponseText(e.target.value)}
                      className="min-h-[80px]"
                    />
                    <div className="flex gap-2">
                      <Button size="sm" onClick={handleAddResponse}>
                        –î–æ–±–∞–≤–∏—Ç—å
                      </Button>
                      <Button size="sm" variant="outline" onClick={() => setShowAddResponse(false)}>
                        –û—Ç–º–µ–Ω–∞
                      </Button>
                    </div>
                  </div>
                ) : (
                  <Button
                    variant="ghost"
                    className="w-full justify-start p-3 border-2 border-dashed text-primary"
                    onClick={() => setShowAddResponse(true)}
                  >
                    <Plus className="h-4 w-4 mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç
                  </Button>
                )}
              </div>
            </div>
          )}
        </div>
      </DialogContent>
    </Dialog>
  );
};