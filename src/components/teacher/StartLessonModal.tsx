import { useState } from 'react';
import { useQuery } from '@tanstack/react-query';
import { supabase } from '@/integrations/supabase/client';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Textarea } from '@/components/ui/textarea';
import { Label } from '@/components/ui/label';
import { Video, Users, Clock, MapPin, BookOpen, ExternalLink, Play, Settings, Mic, MicOff, Camera, CameraOff } from 'lucide-react';
import { format } from 'date-fns';
import { ru } from 'date-fns/locale';
import { useToast } from '@/hooks/use-toast';

interface StartLessonModalProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  session: any;
  teacherName: string;
}

export const StartLessonModal = ({ open, onOpenChange, session, teacherName }: StartLessonModalProps) => {
  const [lessonNotes, setLessonNotes] = useState('');
  const [isStarting, setIsStarting] = useState(false);
  const [micEnabled, setMicEnabled] = useState(true);
  const [cameraEnabled, setCameraEnabled] = useState(true);
  const { toast } = useToast();

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∑–∞–Ω—è—Ç–∏—è
  const { data: students, isLoading: studentsLoading } = useQuery({
    queryKey: ['lesson_students', session?.id],
    queryFn: async () => {
      if (!session?.id) return [];
      
      const { data, error } = await supabase
        .from('student_lesson_sessions')
        .select(`
          students!student_lesson_sessions_student_id_fkey (
            id,
            name,
            first_name,
            last_name
          )
        `)
        .eq('lesson_session_id', session.id);

      if (error) throw error;
      return data?.map(item => item.students).filter(Boolean) || [];
    },
    enabled: open && !!session?.id,
  });

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ
  const { data: groupInfo, isLoading: groupLoading } = useQuery({
    queryKey: ['group_info', session?.group_id],
    queryFn: async () => {
      if (!session?.group_id) return null;
      
      const { data, error } = await supabase
        .from('learning_groups')
        .select('*')
        .eq('id', session.group_id)
        .single();

      if (error) throw error;
      return data;
    },
    enabled: open && !!session?.group_id,
  });

  const handleStartLesson = async () => {
    setIsStarting(true);
    try {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–Ω—è—Ç–∏—è –Ω–∞ "scheduled" (–ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–∏–º "ongoing" –≤ —Ç–∏–ø)
      const { error } = await supabase
        .from('lesson_sessions')
        .update({ 
          status: 'scheduled', // –ò–∑–º–µ–Ω–∏–º –Ω–∞ scheduled –ø–æ–∫–∞ —á—Ç–æ
          notes: lessonNotes || null
        })
        .eq('id', session.id);

      if (error) throw error;

      toast({
        title: "–£—Ä–æ–∫ –Ω–∞—á–∞—Ç",
        description: "–ó–∞–Ω—è—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞—Ç–æ. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–∏–¥–µ–æ–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏...",
      });

      // –ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –æ–Ω–ª–∞–π–Ω —É—Ä–æ–∫
      setTimeout(() => {
        onOpenChange(false);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–∏–¥–µ–æ–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏
        window.open(`/online-lesson/${session.id}?teacher=${encodeURIComponent(teacherName)}&group=${encodeURIComponent(session.learning_groups?.name || '')}&mic=${micEnabled}&camera=${cameraEnabled}`, '_blank');
      }, 1000);

    } catch (error) {
      console.error('Error starting lesson:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å —É—Ä–æ–∫",
        variant: "destructive",
      });
    } finally {
      setIsStarting(false);
    }
  };

  const handleTestConnection = () => {
    toast({
      title: "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
      description: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞, –∫–∞–º–µ—Ä—ã –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...",
    });
    
    // –ò–º–∏—Ç–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    setTimeout(() => {
      toast({
        title: "–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ",
        description: "–í—Å–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ",
      });
    }, 2000);
  };

  if (!session) return null;

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-3xl max-h-[90vh] overflow-hidden flex flex-col">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <Video className="h-5 w-5" />
            –ù–∞—á–∞—Ç—å –æ–Ω–ª–∞–π–Ω —É—Ä–æ–∫
          </DialogTitle>
          <DialogDescription>
            {format(new Date(session.lesson_date), 'EEEE, d MMMM yyyy', { locale: ru })} –≤ {session.start_time} - {session.end_time}
          </DialogDescription>
        </DialogHeader>

        <div className="flex-1 overflow-y-auto space-y-6">
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–Ω—è—Ç–∏–∏ */}
          <div className="bg-muted/50 rounded-lg p-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div className="flex items-center gap-2">
                <BookOpen className="h-4 w-4" />
                <span className="font-medium">
                  {session.learning_groups?.name || '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ'}
                </span>
              </div>
              <div className="flex items-center gap-2">
                <MapPin className="h-4 w-4" />
                <span>–ê—É–¥–∏—Ç–æ—Ä–∏—è: {session.classroom}</span>
              </div>
              <div className="flex items-center gap-2">
                <Clock className="h-4 w-4" />
                <span>{session.start_time} - {session.end_time}</span>
              </div>
              <div className="flex items-center gap-2">
                <Users className="h-4 w-4" />
                <span>–°—Ç—É–¥–µ–Ω—Ç–æ–≤: {students?.length || 0}</span>
              </div>
            </div>
            
            {groupInfo && (
              <div className="mt-3 pt-3 border-t">
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                  <div>
                    <span className="text-muted-foreground">–ü—Ä–µ–¥–º–µ—Ç:</span>
                    <span className="ml-2 font-medium">{groupInfo.subject}</span>
                  </div>
                  <div>
                    <span className="text-muted-foreground">–£—Ä–æ–≤–µ–Ω—å:</span>
                    <span className="ml-2 font-medium">{groupInfo.level}</span>
                  </div>
                  <div>
                    <span className="text-muted-foreground">–£—á–µ–±–Ω–∏–∫:</span>
                    <span className="ml-2 font-medium">{groupInfo.textbook || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                  </div>
                </div>
              </div>
            )}
          </div>

          {/* –°—Ç—É–¥–µ–Ω—Ç—ã */}
          {students && students.length > 0 && (
            <div className="space-y-3">
              <h3 className="font-medium flex items-center gap-2">
                <Users className="h-4 w-4" />
                –£—á–∞—Å—Ç–Ω–∏–∫–∏ —É—Ä–æ–∫–∞ ({students.length})
              </h3>
              <div className="bg-background border rounded-lg p-3">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
                  {students.map((student: any) => (
                    <div key={student.id} className="flex items-center gap-2 text-sm">
                      <div className="w-2 h-2 bg-green-500 rounded-full" />
                      <span>{student.first_name} {student.last_name}</span>
                      <Badge variant="outline" className="text-xs">–û–∂–∏–¥–∞–µ—Ç</Badge>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          )}

          {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
          <div className="space-y-3">
            <h3 className="font-medium flex items-center gap-2">
              <Settings className="h-4 w-4" />
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
            </h3>
            <div className="bg-background border rounded-lg p-4">
              <div className="flex items-center justify-between mb-4">
                <div className="flex items-center gap-4">
                  <Button
                    variant={micEnabled ? "default" : "outline"}
                    size="sm"
                    onClick={() => setMicEnabled(!micEnabled)}
                  >
                    {micEnabled ? <Mic className="h-4 w-4 mr-2" /> : <MicOff className="h-4 w-4 mr-2" />}
                    {micEnabled ? '–ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤–∫–ª—é—á–µ–Ω' : '–ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤—ã–∫–ª—é—á–µ–Ω'}
                  </Button>
                  
                  <Button
                    variant={cameraEnabled ? "default" : "outline"}
                    size="sm"
                    onClick={() => setCameraEnabled(!cameraEnabled)}
                  >
                    {cameraEnabled ? <Camera className="h-4 w-4 mr-2" /> : <CameraOff className="h-4 w-4 mr-2" />}
                    {cameraEnabled ? '–ö–∞–º–µ—Ä–∞ –≤–∫–ª—é—á–µ–Ω–∞' : '–ö–∞–º–µ—Ä–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞'}
                  </Button>
                </div>
                
                <Button variant="outline" size="sm" onClick={handleTestConnection}>
                  –¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
                </Button>
              </div>
              
              <div className="text-xs text-muted-foreground">
                üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –∏ –∫–∞–º–µ—Ä—ã –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —É—Ä–æ–∫–∞
              </div>
            </div>
          </div>

          {/* –ó–∞–º–µ—Ç–∫–∏ –∫ —É—Ä–æ–∫—É */}
          <div className="space-y-3">
            <Label htmlFor="lesson-notes">–ó–∞–º–µ—Ç–∫–∏ –∫ —É—Ä–æ–∫—É (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</Label>
            <Textarea
              id="lesson-notes"
              value={lessonNotes}
              onChange={(e) => setLessonNotes(e.target.value)}
              placeholder="–¶–µ–ª–∏ —É—Ä–æ–∫–∞, –æ—Å–æ–±—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è, –ø–ª–∞–Ω –∑–∞–Ω—è—Ç–∏—è..."
              rows={3}
            />
          </div>

          {/* –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ */}
          <div className="space-y-3">
            <h3 className="font-medium">–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏</h3>
            <div className="flex flex-wrap gap-2">
              <Button variant="outline" size="sm">
                <ExternalLink className="h-3 w-3 mr-2" />
                –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —É—á–µ–±–Ω–∏–∫
              </Button>
              <Button variant="outline" size="sm">
                <ExternalLink className="h-3 w-3 mr-2" />
                –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–æ—Å–∫–∞
              </Button>
              <Button variant="outline" size="sm">
                <ExternalLink className="h-3 w-3 mr-2" />
                –°–ª–æ–≤–∞—Ä—å Cambridge
              </Button>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="flex items-center justify-between pt-4 border-t">
          <div className="text-sm text-muted-foreground">
            –£—Ä–æ–∫ –Ω–∞—á–Ω–µ—Ç—Å—è –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
          </div>
          <div className="flex items-center gap-2">
            <Button variant="outline" onClick={() => onOpenChange(false)}>
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button 
              onClick={handleStartLesson} 
              disabled={isStarting || studentsLoading || groupLoading}
              className="bg-green-600 hover:bg-green-700"
            >
              {isStarting ? (
                '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...'
              ) : (
                <>
                  <Play className="h-4 w-4 mr-2" />
                  –ù–∞—á–∞—Ç—å —É—Ä–æ–∫
                </>
              )}
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};