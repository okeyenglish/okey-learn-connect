import { type WordstatData } from './wordstatAnalyzer';

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –∫–ª—é—á–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–∞—Å—Ç–æ—Ç—ã –∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏
 */
export function getKeywordType(
  wordstatData: WordstatData | null | undefined
): 'narrow' | 'wide' | 'medium' {
  if (!wordstatData) return 'medium';
  
  const freq = wordstatData.shows;
  const competition = wordstatData.competition;
  
  // –£–∑–∫–∏–µ: –Ω–∏–∑–∫–∞—è —á–∞—Å—Ç–æ—Ç–∞ (<1000) + –ª—é–±–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è
  if (freq < 1000) return 'narrow';
  
  // –®–∏—Ä–æ–∫–∏–µ: –≤—ã—Å–æ–∫–∞—è —á–∞—Å—Ç–æ—Ç–∞ (>5000) + –≤—ã—Å–æ–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è
  if (freq > 5000 && competition === 'HIGH') return 'wide';
  
  return 'medium';
}

/**
 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
export function calculateOptimizationProgress(pageData: {
  hasAnalysis: boolean;
  wordstatCoverage: number; // % –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ Wordstat
  hasContent: boolean;
  hasGscData: boolean;
}): number {
  let score = 0;
  if (pageData.hasAnalysis) score += 25;
  if (pageData.wordstatCoverage > 80) score += 25;
  if (pageData.hasContent) score += 25;
  if (pageData.hasGscData) score += 25;
  return score;
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–≤–µ—Ç –¥–ª—è —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞
 */
export function getKeywordTypeColor(type: 'narrow' | 'wide' | 'medium'): string {
  switch (type) {
    case 'narrow': return 'bg-blue-500/10 text-blue-600 dark:text-blue-400';
    case 'wide': return 'bg-purple-500/10 text-purple-600 dark:text-purple-400';
    default: return 'bg-gray-500/10 text-gray-600 dark:text-gray-400';
  }
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç emoji –¥–ª—è —Ç–∏–ø–∞ –∑–∞–ø—Ä–æ—Å–∞
 */
export function getKeywordTypeEmoji(type: 'narrow' | 'wide' | 'medium'): string {
  switch (type) {
    case 'narrow': return 'üéØ';
    case 'wide': return 'üåê';
    default: return 'üìä';
  }
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
 */
export function getPageStatus(progress: number): {
  label: string;
  variant: 'default' | 'secondary' | 'destructive';
  color: string;
} {
  if (progress >= 75) {
    return {
      label: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞',
      variant: 'default',
      color: 'text-green-600 dark:text-green-400'
    };
  } else if (progress >= 40) {
    return {
      label: '–í —Ä–∞–±–æ—Ç–µ',
      variant: 'secondary',
      color: 'text-yellow-600 dark:text-yellow-400'
    };
  } else {
    return {
      label: '–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è',
      variant: 'destructive',
      color: 'text-red-600 dark:text-red-400'
    };
  }
}
